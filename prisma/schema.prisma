generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model WorkWith {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  typeWork  String
  email     String
  tel       String
  detail    String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
  Skill     Skill?    @relation(fields: [skillId], references: [id])
  skillId   String?   @db.ObjectId
}

model Skill {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  createdBy     String
  createdAt     DateTime        @default(now())
  updatedBy     String?
  updatedAt     DateTime        @updatedAt
  deletedBy     String?
  deletedAt     DateTime?       @map("deleted_at")
  deleted       Boolean         @default(false)
  WorkWithSkill WorkWithSkill[]
  MemberSkill   MemberSkill[]
  WorkWith      WorkWith[]
}

model MemberSkill {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
  Member    Member?   @relation(fields: [memberId], references: [id])
  memberId  String?   @db.ObjectId
  Skill     Skill?    @relation(fields: [skillId], references: [id])
  skillId   String?   @db.ObjectId
}

model WorkWithSkill {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
  Member    Member?   @relation(fields: [memberId], references: [id])
  memberId  String?   @db.ObjectId
  Skill     Skill?    @relation(fields: [skillId], references: [id])
  skillId   String?   @db.ObjectId
}

model Contact {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  tel       String
  detail    String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
}

model Blog {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  subTitle    String
  subDetail   String
  detailOne   String
  detailTwo   String
  detailThree String
  listOne     String
  listTwo     String
  listThree   String
  start       DateTime
  end         DateTime
  createdBy   String
  createdAt   DateTime  @default(now())
  updatedBy   String?
  updatedAt   DateTime  @updatedAt
  deletedBy   String?
  deletedAt   DateTime? @map("deleted_at")
  deleted     Boolean   @default(false)
  Gallery     Gallery[]
}

model OurWork {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  subTitle    String
  subDetail   String
  detailOne   String
  detailTwo   String
  detailThree String
  listOne     String
  listTwo     String
  listThree   String
  start       DateTime
  end         DateTime
  createdBy   String
  createdAt   DateTime  @default(now())
  updatedBy   String?
  updatedAt   DateTime  @updatedAt
  deletedBy   String?
  deletedAt   DateTime? @map("deleted_at")
  deleted     Boolean   @default(false)
  Gallery     Gallery[]
}

model News {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  subTitle    String
  subDetail   String
  detailOne   String
  detailTwo   String
  detailThree String
  listOne     String
  listTwo     String
  listThree   String
  start       DateTime
  end         DateTime
  createdBy   String
  createdAt   DateTime  @default(now())
  updatedBy   String
  updatedAt   DateTime  @updatedAt
  deletedBy   String?
  deletedAt   DateTime? @map("deleted_at")
  deleted     Boolean   @default(false)
  Gallery     Gallery[]
}

model WebVisitor {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  volume    String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
}

model Permission {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
  Role      Role?     @relation(fields: [roleId], references: [id])
  roleId    String?   @db.ObjectId
}

model Role {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  createdBy  String
  createdAt  DateTime     @default(now())
  updatedBy  String?
  updatedAt  DateTime     @updatedAt
  deletedBy  String?
  deletedAt  DateTime?    @map("deleted_at")
  deleted    Boolean      @default(false)
  Permission Permission[]
  Member     Member[]
}

model Member {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  username      String
  password      String
  firstname     String
  lastname      String
  facebook      String
  line          String
  instagram     String
  addressOne    String
  addressTwo    String
  subDistrict   String
  district      String
  city          String
  postalCode    String
  createdBy     String
  createdAt     DateTime        @default(now())
  updatedBy     String?
  updatedAt     DateTime        @updatedAt
  deletedBy     String?
  deletedAt     DateTime?       @map("deleted_at")
  deleted       Boolean         @default(false)
  Position      Position?       @relation(fields: [positionId], references: [id])
  positionId    String?         @db.ObjectId
  Role          Role?           @relation(fields: [roleId], references: [id])
  roleId        String?         @db.ObjectId
  Gallery       Gallery[]
  MemberSkill   MemberSkill[]
  WorkWithSkill WorkWithSkill[]
}

model PackagePrice {
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId
  title                   String
  price                   String
  typeService             String
  detailTextEditer        String
  detailTextEditerListOne String
  detailTextEditerListTwo String
  createdBy               String
  createdAt               DateTime  @default(now())
  updatedBy               String?
  updatedAt               DateTime  @updatedAt
  deletedBy               String?
  deletedAt               DateTime? @map("deleted_at")
}

model Service {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  price      String
  detail     String
  detailList String
  createdBy  String
  createdAt  DateTime  @default(now())
  updatedBy  String?
  updatedAt  DateTime  @updatedAt
  deletedBy  String?
  deletedAt  DateTime? @map("deleted_at")
  deleted    Boolean   @default(false)
  Gallery    Gallery[]
}

model Setting {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  businessName      String
  facebook          String
  intragarm         String
  line              String
  tel               String
  addressOne        String
  addressTwo        String
  sunDistrict       String
  district          String
  city              String
  postalCode        String
  location          String
  aboutTitile       String
  aboutSubTitle     String
  aboutDetailOne    String
  aboutSubDetailOne String
  aboutDetailTwo    String
  aboutSubDetailTwo String
  createdBy         String
  createdAt         DateTime  @default(now())
  updatedBy         String?
  updatedAt         DateTime  @updatedAt
  deletedBy         String?
  deletedAt         DateTime? @map("deleted_at")
  deleted           Boolean   @default(false)
  Gallery           Gallery[]
}

model AuditLog {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  code      String
  dataOld   String
  dataNew   String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
}

model Department {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  detail    String
  createdBy String
  createdAt DateTime   @default(now())
  updatedBy String?
  updatedAt DateTime   @updatedAt
  deletedBy String?
  deletedAt DateTime?  @map("deleted_at")
  deleted   Boolean    @default(false)
  Gallery   Gallery[]
  Position  Position[]
}

model Position {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  createdBy    String
  createdAt    DateTime    @default(now())
  updatedBy    String?
  updatedAt    DateTime    @updatedAt
  deletedBy    String?
  deletedAt    DateTime?   @map("deleted_at")
  deleted      Boolean     @default(false)
  Department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?     @db.ObjectId
  member       Member[]
}

model Gallery {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  alt          String
  how          String
  createdBy    String
  createdAt    DateTime    @default(now())
  updatedBy    String?
  updatedAt    DateTime    @updatedAt
  deletedBy    String?
  deletedAt    DateTime?   @map("deleted_at")
  deleted      Boolean     @default(false)
  Blog         Blog?       @relation(fields: [blogId], references: [id])
  blogId       String?     @db.ObjectId
  Member       Member?     @relation(fields: [memberId], references: [id])
  memberId     String?     @db.ObjectId
  Department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?     @db.ObjectId
  OurWork      OurWork?    @relation(fields: [ourWorkId], references: [id])
  ourWorkId    String?     @db.ObjectId
  Setting      Setting?    @relation(fields: [settingId], references: [id])
  settingId    String?     @db.ObjectId
  News         News?       @relation(fields: [newsId], references: [id])
  newsId       String?     @db.ObjectId
  Service      Service?    @relation(fields: [serviceId], references: [id])
  serviceId    String?     @db.ObjectId
  ImgList      ImgList?    @relation(fields: [ImgListId], references: [id])
  ImgListId    String?     @db.ObjectId
}

model ImgList {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdBy String
  createdAt DateTime  @default(now())
  updatedBy String?
  updatedAt DateTime  @updatedAt
  deletedBy String?
  deletedAt DateTime? @map("deleted_at")
  deleted   Boolean   @default(false)
  Gallery   Gallery[]
}
